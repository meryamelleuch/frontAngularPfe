{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/employee.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","employeeService","getEmployees","subscribe","response","employees","console","log","error","alert","message","addForm","document","getElementById","click","addEmployee","value","reset","employee","updateEmployee","employeeId","deleteEmployee","key","results","name","toLowerCase","indexOf","email","phone","jobTitle","push","length","mode","container","button","createElement","type","style","display","setAttribute","editEmployee","appendChild","onOpenModal","searchEmployees","onAddEmloyee","onUpdateEmloyee","onDeleteEmloyee","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","EmployeeService","http","apiServerUrl","apiBaseUrl","get","post","put","providedIn","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { Employee } from './employee';\nimport { EmployeeService } from './employee.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  public employees: Employee[];\n  public editEmployee: Employee;\n  public deleteEmployee: Employee;\n  title: any;\n\n  constructor(private employeeService: EmployeeService){}\n\n  ngOnInit() {\n    this.getEmployees();\n  }\n\n  public getEmployees(): void {\n    this.employeeService.getEmployees().subscribe(\n      (response: Employee[]) => {\n        this.employees = response;\n        console.log(this.employees);\n      },\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n    );\n  }\n\n  public onAddEmloyee(addForm: NgForm): void {\n    document.getElementById('add-employee-form').click();\n    this.employeeService.addEmployee(addForm.value).subscribe(\n      (response: Employee) => {\n        console.log(response);\n        this.getEmployees();\n        addForm.reset();\n      },\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n        addForm.reset();\n      }\n    );\n  }\n\n  public onUpdateEmloyee(employee: Employee): void {\n    this.employeeService.updateEmployee(employee).subscribe(\n      (response: Employee) => {\n        console.log(response);\n        this.getEmployees();\n      },\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n    );\n  }\n\n  public onDeleteEmloyee(employeeId: number): void {\n    this.employeeService.deleteEmployee(employeeId).subscribe(\n      (response: void) => {\n        console.log(response);\n        this.getEmployees();\n      },\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n    );\n  }\n\n  public searchEmployees(key: string): void {\n    console.log(key);\n    const results: Employee[] = [];\n    for (const employee of this.employees) {\n      if (employee.name.toLowerCase().indexOf(key.toLowerCase()) !== -1\n      || employee.email.toLowerCase().indexOf(key.toLowerCase()) !== -1\n      || employee.phone.toLowerCase().indexOf(key.toLowerCase()) !== -1\n      || employee.jobTitle.toLowerCase().indexOf(key.toLowerCase()) !== -1) {\n        results.push(employee);\n      }\n    }\n    this.employees = results;\n    if (results.length === 0 || !key) {\n      this.getEmployees();\n    }\n  }\n\n  public onOpenModal(employee: Employee, mode: string): void {\n    const container = document.getElementById('main-container');\n    const button = document.createElement('button');\n    button.type = 'button';\n    button.style.display = 'none';\n    button.setAttribute('data-toggle', 'modal');\n    if (mode === 'add') {\n      button.setAttribute('data-target', '#addEmployeeModal');\n    }\n    if (mode === 'edit') {\n      this.editEmployee = employee;\n      button.setAttribute('data-target', '#updateEmployeeModal');\n    }\n    if (mode === 'delete') {\n      this.deleteEmployee = employee;\n      button.setAttribute('data-target', '#deleteEmployeeModal');\n    }\n    container.appendChild(button);\n    button.click();\n  }\n\n\n\n}\n\n\n\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\" style=\"color:rgb(170, 166, 149);\">\n\n <a class=\"navbar-brand\" style=\"color:rgb(235, 165, 75);\">Altersis Performance Company Trainees Management Platform</a>\n <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor02\" aria-controls=\"navbarColor02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n <span class=\"navbar-toggler-icon\"></span>\n </button>\n\n <div class=\"collapse navbar-collapse\" id=\"navbarColor02\">\n    <ul class=\"navbar-nav mr-auto\">\n       <li class=\"nav-item active\">\n          <a class=\"nav-link\" (click)=\"onOpenModal(null, 'add')\">Add Trainees <span class=\"sr-only\">(current)</span></a>\n       </li>\n    </ul>\n    <form class=\"form-inline my-2 my-lg-0\">\n       <input type=\"search\" (ngModelChange)=\"searchEmployees(key.value)\" #key=\"ngModel\" ngModel\n        name=\"key\" id=\"searchName\" class=\"form-control mr-sm-2\" placeholder=\"Search Trainees...\" required>\n    </form>\n </div>\n</nav>\n<div class=\"container\" id=\"main-container\">\n<div class=\"row\">\n <div *ngFor=\"let employee of employees\" class=\"col-md-6 col-xl-3\">\n    <div class=\"card m-b-30\">\n       <div class=\"card-body row\">\n          <div class=\"col-6\">\n<!--              <a href=\"\"><img src=\"{{employee?.imageUrl}}\" alt=\"\" class=\"img-fluid rounded-circle w-60\"></a>\n-->          \n\n</div>\n          <div class=\"col-6 card-title align-self-center mb-0\">\n             <h5>{{employee?.name}}</h5>\n             <p class=\"m-0\">{{employee?.jobTitle}}</p>\n          </div>\n       </div>\n       <ul class=\"list-group list-group-flush\">\n          <li class=\"list-group-item\"><i class=\"fa fa-envelope float-right\"></i>{{employee?.email}}</li>\n          <li class=\"list-group-item\"><i class=\"fa fa-phone float-right\"></i>Phone : {{employee?.phone}}</li>\n          <li class=\"list-group-item\"><i class=\"fa fa-envelope float-right\"></i>Encadreur: {{employee?.imageUrl}}</li>\n       </ul>\n       <div class=\"card-body\">\n          <div class=\"float-right btn-group btn-group-sm\">\n             <a (click)=\"onOpenModal(employee, 'edit')\" class=\"btn btn-primary tooltips\" data-placement=\"top\" data-original-title=\"Edit\"><i class=\"fa fa-pencil\"></i> </a>\n             <a (click)=\"onOpenModal(employee, 'delete')\" class=\"btn btn-secondary tooltips\" data-placement=\"top\" data-original-title=\"Delete\"><i class=\"fa fa-times\"></i></a>\n          </div>\n       </div>\n    </div>\n </div>\n</div>\n\n<!-- Add Employee Modal -->\n<div class=\"modal fade\" id=\"addEmployeeModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"addEmployeeModalLabel\" aria-hidden=\"true\">\n <div class=\"modal-dialog\" role=\"document\">\n   <div class=\"modal-content\">\n      <div class=\"modal-header\">\n         <h5 class=\"modal-title\" id=\"addEmployeeModalLabel\">Add Employee</h5>\n         <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n         <span aria-hidden=\"true\">&times;</span>\n         </button>\n      </div>\n      <div class=\"modal-body\">\n         <form #addForm=\"ngForm\" (ngSubmit)=\"onAddEmloyee(addForm)\">\n         <div class=\"form-group\">\n            <label for=\"name\">Name</label>\n            <input type=\"text\" ngModel name=\"name\" class=\"form-control\" id=\"name\" placeholder=\"Name\" required>\n         </div>\n         <div class=\"form-group\">\n            <label for=\"email\">Email Address</label>\n            <input type=\"email\" ngModel name=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Email\" required>\n         </div>\n         <div class=\"form-group\">\n            <label for=\"phone\">Job title</label>\n            <input type=\"text\" ngModel name=\"jobTitle\" class=\"form-control\" id=\"jobTile\" placeholder=\"Job title\" required>\n         </div>\n         <div class=\"form-group\">\n            <label for=\"phone\">Phone</label>\n            <input type=\"text\" ngModel name=\"phone\" class=\"form-control\" id=\"phone\" placeholder=\"Phone\" required>\n         </div>\n         <div class=\"form-group\">\n            <label for=\"phone\">encadreur</label>\n            <input type=\"text\" ngModel name=\"imageUrl\" class=\"form-control\" id=\"encadreur\"placeholder=\"encadreur\" required>\n         </div>\n         <div class=\"modal-footer\">\n            <button type=\"button\" id=\"add-employee-form\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n            <button [disabled]=\"addForm.invalid\" type=\"submit\" class=\"btn btn-primary\" >Save changes</button>\n         </div>\n         </form>\n      </div>\n   </div>\n </div>\n </div>\n\n<!-- Edit Modal -->\n<div class=\"modal fade\" id=\"updateEmployeeModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"employeeEditModalLabel\" aria-hidden=\"true\">\n <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n       <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"updateEmployeeModalLabel\">Edit Employee {{editEmployee?.name}}</h5>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n          </button>\n       </div>\n       <div class=\"modal-body\">\n          <form #editForm=\"ngForm\">\n             <div class=\"form-group\">\n                <label for=\"name\">Name</label>\n                <input type=\"text\" ngModel=\"{{editEmployee?.name}}\" name=\"name\" class=\"form-control\" id=\"name\" aria-describedby=\"emailHelp\" placeholder=\"Name\">\n             </div>\n             <input type=\"hidden\" ngModel=\"{{editEmployee?.id}}\" name=\"id\" class=\"form-control\" id=\"id\" placeholder=\"Email\">\n             <input type=\"hidden\" ngModel=\"{{editEmployee?.employeeCode}}\" name=\"userCode\" class=\"form-control\" id=\"userCode\" placeholder=\"Email\">\n             <div class=\"form-group\">\n                <label for=\"email\">Email Address</label>\n                <input type=\"email\" ngModel=\"{{editEmployee?.email}}\" name=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Email\">\n             </div>\n             <div class=\"form-group\">\n                <label for=\"phone\">Job title</label>\n                <input type=\"text\" ngModel=\"{{editEmployee?.jobTitle}}\" name=\"jobTitle\" class=\"form-control\" id=\"jobTitle\" placeholder=\"Job title\">\n             </div>\n             <div class=\"form-group\">\n                <label for=\"phone\">Phone</label>\n                <input type=\"text\" ngModel=\"{{editEmployee?.phone}}\" name=\"phone\" class=\"form-control\" id=\"phone\" name=\"phone\" placeholder=\"Phone\">\n             </div>\n             <div class=\"form-group\">\n                <label for=\"phone\">Image URL</label>\n                <input type=\"text\" ngModel=\"{{editEmployee?.imageUrl}}\" name=\"imageUrl\" class=\"form-control\" id=\"imageUrl\" placeholder=\"Image URL\">\n             </div>\n             <div class=\"modal-footer\">\n                <button type=\"button\" id=\"\" data-dismiss=\"modal\" class=\"btn btn-secondary\">Close</button>\n                <button (click)=\"onUpdateEmloyee(editForm.value)\" data-dismiss=\"modal\" class=\"btn btn-primary\" >Save changes</button>\n             </div>\n          </form>\n       </div>\n    </div>\n </div>\n</div>\n\n<!-- Delete Modal -->\n<div class=\"modal fade\" id=\"deleteEmployeeModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"deleteModelLabel\" aria-hidden=\"true\">\n <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n       <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"deleteModelLabel\">Delete Employee</h5>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n          </button>\n       </div>\n       <div class=\"modal-body\">\n          <p>Are you sure you want to delete employee {{deleteEmployee?.name}}?</p>\n          <div class=\"modal-footer\">\n             <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">No</button>\n             <button (click)=\"onDeleteEmloyee(deleteEmployee?.id)\" class=\"btn btn-danger\" data-dismiss=\"modal\">Yes</button>\n          </div>\n       </div>\n    </div>\n </div>\n</div>\n</div>\n\n<!-- Notification for no employees -->\n<div *ngIf=\"employees?.length == 0\" class=\"col-lg-12 col-md-12 col-xl-12\">\n<div class=\"alert alert-info\" role=\"alert\">\n <h4 class=\"alert-heading\">NO EMPLOYEES!</h4>\n <p>No Employees were found.</p>\n</div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { EmployeeService } from './employee.service';\nimport { HttpClientModule } from '@angular/common/http';import { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule, FormsModule\n  ],\n  providers: [EmployeeService],\n  bootstrap: [AppComponent],\n  exports: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Employee } from './employee';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class EmployeeService {\r\n  private apiServerUrl = environment.apiBaseUrl;\r\n\r\n  constructor(private http: HttpClient){}\r\n\r\n  public getEmployees(): Observable<Employee[]> {\r\n    return this.http.get<Employee[]>(`${this.apiServerUrl}/employee/all`);\r\n  }\r\n\r\n  public getEmployeeById(employeeId: number): Observable<Employee> {\r\n    return this.http.get<Employee>(`${this.apiServerUrl}/employee/find/${employeeId}`);\r\n  }\r\n\r\n  public addEmployee(employee: Employee): Observable<Employee> {\r\n    return this.http.post<Employee>(`${this.apiServerUrl}/employee/add`, employee);\r\n  }\r\n\r\n  public updateEmployee(employee: Employee): Observable<Employee> {\r\n    return this.http.put<Employee>(`${this.apiServerUrl}/employee/update`, employee);\r\n  }\r\n\r\n  public deleteEmployee(employeeId: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiServerUrl}/employee/delete/${employeeId}`);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiBaseUrl: 'http://localhost:8087'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}